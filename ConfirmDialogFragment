package com.panasonic.smart.eolia.common.view.dialog;


import android.app.Dialog;
import android.app.DialogFragment;
import android.content.DialogInterface;
import android.os.Bundle;
import android.view.KeyEvent;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.Window;
import android.view.WindowManager;
import android.widget.Button;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.panasonic.smart.eolia.R;


public class ConfirmDialogFragment extends DialogFragment {

    public static final String KEY_CONTENT_STRING = "KEY_CONTENT_STRING";
    public static final String KEY_CANCEL_STRING = "KEY_CANCEL_STRING";
    public static final String KEY_OK_STRING = "KEY_OK_STRING";
    public static final String KEY_TYPE = "TYPE_TYPE";
    public static final String TYPE_DOUBLE = "1";
    public static final String TYPE_SINGLE = "2";
    View view;
    OnConfirmListener confirmListener;
    String type;
    String okString;
    String cancelString;
    String contentString;

    public interface OnConfirmListener {
        void onClick(Dialog dialog);

        void onBack(boolean isDismiss);
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        getDialog().requestWindowFeature(Window.FEATURE_NO_TITLE);
        getDialog().setCanceledOnTouchOutside(false);
        getDialog().getWindow().setBackgroundDrawableResource(R.drawable.dialog_network_bg);
        if (view == null) {
            view = inflater.inflate(R.layout.dialog_confirm, container, false);
        }
        //防止点击能穿透
        view.setClickable(true);
        Button btCancel = (Button) view.findViewById(R.id.btCancel);
        Button btOK = (Button) view.findViewById(R.id.btOK);
        Button btOKSingle = (Button) view.findViewById(R.id.btOK_single);
        TextView textview = (TextView) view.findViewById(R.id.textview);
        RelativeLayout relativesingle = (RelativeLayout) view.findViewById(R.id.lenear_single);
        RelativeLayout relative = (RelativeLayout) view.findViewById(R.id.lenear);
        Bundle bundle = getArguments();
        type = bundle.getString(KEY_TYPE);
        contentString = bundle.getString(KEY_CONTENT_STRING, "");
        okString = bundle.getString(KEY_OK_STRING, "OK");
        cancelString = bundle.getString(KEY_CANCEL_STRING, "Cancel");
        switch (type) {
            case TYPE_SINGLE:
                relativesingle.setVisibility(View.VISIBLE);
                relative.setVisibility(View.GONE);
                break;
            case TYPE_DOUBLE:
                relativesingle.setVisibility(View.GONE);
                relative.setVisibility(View.VISIBLE);
                break;
        }
        textview.setText(contentString);
        btCancel.setText(cancelString);
        btOK.setText(okString);
        btOKSingle.setText(okString);
        btCancel.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                confirmListener.onBack(false);
                dismiss();
            }
        });
        btOKSingle.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (confirmListener != null) {
                    confirmListener.onClick(getDialog());
                    dismiss();
                }
            }
        });
        btOK.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                if (confirmListener != null) {
                    confirmListener.onClick(getDialog());
                    dismiss();
                }

            }
        });
        return view;
    }

    public void setOnDialogConfirmListener(OnConfirmListener confirmListener) {
        this.confirmListener = confirmListener;
    }

    @Override
    public void onActivityCreated(Bundle savedInstanceState) {
        super.onActivityCreated(savedInstanceState);
    }

    @Override
    public void onPause() {
        super.onPause();
    }

    public void onResume() {
        super.onResume();
        getFocus();
    }


    @Override
    public void onStart() {
        super.onStart();
        Window window = getDialog().getWindow();
        WindowManager.LayoutParams windowParams = window.getAttributes();
        windowParams.dimAmount = 0.0f;
        window.setAttributes(windowParams);
    }

    @Override
    public void onDismiss(DialogInterface dialog) {
        super.onDismiss(dialog);
        confirmListener.onBack(true);
    }

    /**
     * 画面のフォーカスを設定する。
     */
    private void getFocus() {
        getView().setFocusableInTouchMode(true);
        getView().requestFocus();
        getView().setOnKeyListener(new View.OnKeyListener() {
            @Override
            public boolean onKey(View v, int keyCode, KeyEvent event) {
                if (event.getAction() == KeyEvent.ACTION_UP && keyCode == KeyEvent.KEYCODE_BACK) {
                    // 监听到返回按钮点击事件
                    dismiss();
                    return true;
                }
                return false;
            }
        });
    }
}
